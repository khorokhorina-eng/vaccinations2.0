//
//  ChildProfile.swift
//  VaccineCalendar
//

import Foundation

// –ú–æ–¥–µ–ª—å –ø—Ä–æ—Ñ–∏–ª—è —Ä–µ–±—ë–Ω–∫–∞
struct ChildProfile: Codable {
    var name: String
    var birthDate: Date
    var country: String
    
    // –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
    var age: Int {
        let calendar = Calendar.current
        let ageComponents = calendar.dateComponents([.year], from: birthDate, to: Date())
        return ageComponents.year ?? 0
    }
    
    var ageInMonths: Int {
        let calendar = Calendar.current
        let ageComponents = calendar.dateComponents([.month], from: birthDate, to: Date())
        return ageComponents.month ?? 0
    }
    
    var ageDescription: String {
        let years = age
        let months = ageInMonths % 12
        
        if years == 0 {
            if months == 0 {
                return "–ù–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π"
            } else if months == 1 {
                return "1 –º–µ—Å—è—Ü"
            } else if months < 5 {
                return "\(months) –º–µ—Å—è—Ü–∞"
            } else {
                return "\(months) –º–µ—Å—è—Ü–µ–≤"
            }
        } else if years == 1 {
            if months == 0 {
                return "1 –≥–æ–¥"
            } else {
                return "1 –≥–æ–¥ \(months) –º–µ—Å."
            }
        } else if years < 5 {
            if months == 0 {
                return "\(years) –≥–æ–¥–∞"
            } else {
                return "\(years) –≥–æ–¥–∞ \(months) –º–µ—Å."
            }
        } else {
            if months == 0 {
                return "\(years) –ª–µ—Ç"
            } else {
                return "\(years) –ª–µ—Ç \(months) –º–µ—Å."
            }
        }
    }
}

// –°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å—Ç—Ä–∞–Ω
enum Country: String, CaseIterable {
    // –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ (–¥–æ—Å—Ç—É–ø–Ω—ã —Å—Ä–∞–∑—É)
    case usa = "USA"
    case china = "China"
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º—ã–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏
    case russia = "Russia"
    case germany = "Germany"
    case france = "France"
    case italy = "Italy"
    case brazil = "Brazil"
    case argentina = "Argentina"
    case mexico = "Mexico"
    
    var flag: String {
        switch self {
        case .usa: return "üá∫üá∏"
        case .china: return "üá®üá≥"
        case .russia: return "üá∑üá∫"
        case .germany: return "üá©üá™"
        case .france: return "üá´üá∑"
        case .italy: return "üáÆüáπ"
        case .brazil: return "üáßüá∑"
        case .argentina: return "üá¶üá∑"
        case .mexico: return "üá≤üáΩ"
        }
    }
    
    var displayName: String {
        switch self {
        case .usa: return "\(flag) United States"
        case .china: return "\(flag) China"
        case .russia: return "\(flag) Russia"
        case .germany: return "\(flag) Germany"
        case .france: return "\(flag) France"
        case .italy: return "\(flag) Italy"
        case .brazil: return "\(flag) Brazil"
        case .argentina: return "\(flag) Argentina"
        case .mexico: return "\(flag) Mexico"
        }
    }
    
    var localizedName: String {
        switch self {
        case .usa: return NSLocalizedString("United States", comment: "")
        case .china: return NSLocalizedString("China", comment: "")
        case .russia: return NSLocalizedString("Russia", comment: "")
        case .germany: return NSLocalizedString("Germany", comment: "")
        case .france: return NSLocalizedString("France", comment: "")
        case .italy: return NSLocalizedString("Italy", comment: "")
        case .brazil: return NSLocalizedString("Brazil", comment: "")
        case .argentina: return NSLocalizedString("Argentina", comment: "")
        case .mexico: return NSLocalizedString("Mexico", comment: "")
        }
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –≤—Å—Ç—Ä–æ–µ–Ω –ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    var isBuiltIn: Bool {
        switch self {
        case .usa, .china:
            return true
        default:
            return false
        }
    }
    
    // URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è (–¥–ª—è –Ω–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω)
    var remoteURL: String? {
        switch self {
        case .usa, .china:
            return nil // –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏
        case .russia:
            return "https://raw.githubusercontent.com/vaccine-calendars/data/main/russia.json"
        case .germany:
            return "https://raw.githubusercontent.com/vaccine-calendars/data/main/germany.json"
        case .france:
            return "https://raw.githubusercontent.com/vaccine-calendars/data/main/france.json"
        case .italy:
            return "https://raw.githubusercontent.com/vaccine-calendars/data/main/italy.json"
        case .brazil:
            return "https://raw.githubusercontent.com/vaccine-calendars/data/main/brazil.json"
        case .argentina:
            return "https://raw.githubusercontent.com/vaccine-calendars/data/main/argentina.json"
        case .mexico:
            return "https://raw.githubusercontent.com/vaccine-calendars/data/main/mexico.json"
        }
    }
    
    // –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    var localFileName: String {
        switch self {
        case .usa: return "vaccines_usa"
        case .china: return "vaccines_china"
        case .russia: return "vaccines_russia"
        default: return "vaccines_\(rawValue.lowercased())"
        }
    }
}
