//
//  ChildProfile.swift
//  VaccineCalendar
//

import Foundation

// –ú–æ–¥–µ–ª—å –ø—Ä–æ—Ñ–∏–ª—è —Ä–µ–±—ë–Ω–∫–∞
struct ChildProfile: Codable {
    var name: String
    var birthDate: Date
    var country: String
    
    // –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
    var age: Int {
        let calendar = Calendar.current
        let ageComponents = calendar.dateComponents([.year], from: birthDate, to: Date())
        return ageComponents.year ?? 0
    }
    
    var ageInMonths: Int {
        let calendar = Calendar.current
        let ageComponents = calendar.dateComponents([.month], from: birthDate, to: Date())
        return ageComponents.month ?? 0
    }
    
    var ageDescription: String {
        let years = age
        let months = ageInMonths % 12
        
        if years == 0 {
            if months == 0 {
                return "–ù–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π"
            } else if months == 1 {
                return "1 –º–µ—Å—è—Ü"
            } else if months < 5 {
                return "\(months) –º–µ—Å—è—Ü–∞"
            } else {
                return "\(months) –º–µ—Å—è—Ü–µ–≤"
            }
        } else if years == 1 {
            if months == 0 {
                return "1 –≥–æ–¥"
            } else {
                return "1 –≥–æ–¥ \(months) –º–µ—Å."
            }
        } else if years < 5 {
            if months == 0 {
                return "\(years) –≥–æ–¥–∞"
            } else {
                return "\(years) –≥–æ–¥–∞ \(months) –º–µ—Å."
            }
        } else {
            if months == 0 {
                return "\(years) –ª–µ—Ç"
            } else {
                return "\(years) –ª–µ—Ç \(months) –º–µ—Å."
            }
        }
    }
}

// –°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å—Ç—Ä–∞–Ω
enum Country: String, CaseIterable {
    case russia = "–†–æ—Å—Å–∏—è"
    case belarus = "–ë–µ–ª–∞—Ä—É—Å—å"
    case kazakhstan = "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω"
    case ukraine = "–£–∫—Ä–∞–∏–Ω–∞"
    
    var flag: String {
        switch self {
        case .russia: return "üá∑üá∫"
        case .belarus: return "üáßüáæ"
        case .kazakhstan: return "üá∞üáø"
        case .ukraine: return "üá∫üá¶"
        }
    }
    
    var displayName: String {
        "\(flag) \(rawValue)"
    }
}